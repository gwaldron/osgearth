/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2010 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTH_MESH_CONSOLIDATOR
#define OSGEARTH_MESH_CONSOLIDATOR

#include <osgEarth/Common>
#include <osg/Geode>
#include <osg/Geometry>

namespace osgEarth { 


    /**
     * Consolidates all the like-moded primitive sets in a geometry.
     */
    class OSGEARTH_EXPORT MeshConsolidator
    {
    public:
        static void run( osg::Geometry& geom );

		static void run( osg::Geode& geode);

	protected:
		template<typename FROM, typename TO>
		static osg::PrimitiveSet* copy( FROM* src, unsigned offset )
		{
			TO* newDE = new TO( src->getMode() );
			newDE->reserve( src->size() );
			for( typename FROM::const_iterator i = src->begin(); i != src->end(); ++i )
				newDE->push_back( (*i) + offset );
			return newDE;
		}

		template<typename FROM>
		static osg::PrimitiveSet* remake( FROM* src, unsigned numVerts, unsigned offset )
		{
			if ( numVerts < 0x100 )
				return copy<FROM,osg::DrawElementsUByte>( src, offset );
			else if ( numVerts < 0x10000 )
				return copy<FROM,osg::DrawElementsUShort>( src, offset );
			else
				return copy<FROM,osg::DrawElementsUInt>( src, offset );
		}
    };

} // namespace osgEarth

#endif // OSGEARTH_MESH_CONSOLIDATOR
