<!--
Demo of MapBox's satellite, terrain and streets layers

Please change your API key to your own MapBox account, this key is for demo purposes only.
-->

<map name="MapBox">


    <XYZImage name="mapbox_satellite" driver="xyz">
        <url>http://a.tiles.mapbox.com/v4/mapbox.satellite/{z}/{x}/{y}.jpg?access_token=YOUR_TOKEN_HERE</url>
        <profile>spherical-mercator</profile>
    </XYZImage>


    <XYZElevation name="mapbox_terrain" driver="xyz" max_data_level="14">
        <url>http://api.mapbox.com/v4/mapbox.terrain-rgb/{z}/{x}/{y}.pngraw?access_token=YOUR_TOKEN_HERE</url>
        <profile>spherical-mercator</profile>
        <elevation_encoding>mapbox</elevation_encoding>
    </XYZElevation>


    <FeatureModel name="mapbox_streets">

        <XYZFeatures name="mapbox_streets">
            <url>http://[abcd].tiles.mapbox.com/v4/mapbox.mapbox-streets-v7/{z}/{x}/{y}.vector.pbf?access_token=YOUR_TOKEN_HERE</url>
            <!-- Change this to pick what level you want to view the mapbox data at, just keep min_level and max_level the same -->
            <min_level>15</min_level>
            <max_level>15</max_level>
            <profile>spherical-mercator</profile>
            <format>pbf</format>
        </XYZFeatures>

        <feature_indexing enabled="true"></feature_indexing>

        <styles>

            <library name="us_resources">
                <url>../data/resources/textures_us/catalog.xml</url>
            </library>

            <style type="text/css">
                hospital {
                     icon: "../data/hospital.png";
                     icon-align:    center-center;
                     icon-declutter: true;
                     text-content:  getName();
                     altitude-clamping:       terrain;
                     altitude-resolution: 0.001;
                }

                school {
                     icon: "../data/school.png";
                     icon-align:    center-center;
                     icon-declutter: true;
                     text-content:  getName();
                     altitude-clamping:       terrain;
                     altitude-resolution: 0.001;
                }

                bank {
                     icon: "../data/bank.png";
                     icon-align:    center-center;
                     icon-declutter: true;
                     text-content:  getName();
                     altitude-clamping:       terrain;
                     altitude-resolution: 0.001;
                }

                forest {
                   model:               "../data/tree.osg";
                   model-placement:     random;
                   model-density:       10000;
                   model-scale:         2.5;
                   model-random-seed:   1;
                   altitude-clamping:       terrain;
                   altitude-resolution: 0.001;
                }

                grass {
                   model:               "../data/tree.osg";
                   model-placement:     random;
                   model-density:       10000;
                   model-scale:         2.5;
                   model-random-seed:   1;
                   altitude-clamping:       terrain;
                   altitude-resolution: 0.001;
                }

                water {
                   fill:               #6BA8FF;
                   render-depth-test:  false;
                   altitude-clamping:  terrain-drape;
                }

                buildings {
                  extrusion-height:      getBuildingHeight();
                  extrusion-flatten:     true;
                  extrusion-wall-style:  building-wall;
                  extrusion-roof-style:  building-rooftop;
                  altitude-clamping:     terrain;
                  altitude-resolution: 0.001;
                }

                building-wall {
                  skin-library:     us_resources;
                  skin-tags:        building;
                  skin-random-seed: 1;
                  fill:             #ffffff;
                }
                building-rooftop {
                  skin-library:     us_resources;
                  skin-tags:        rooftop;
                  skin-tiled:       true;
                  skin-random-seed: 1;
                  fill:             #ffffff;
                }

                roads {
                  stroke:             #656363;
                  stroke-width:       5m;
                  altitude-clamping:  terrain-drape;
                  stroke-tessellation-size: 5m;
                  render-order: 100;
                }

            </style>

            <selector name="default" style_expr="selectStyle()"/>

            <script language="javascript">
              <![CDATA[

                function selectStyle() {

                    var layer = feature.properties["mvt_layer"];
                    if (layer === "building") return "buildings";
                    if (layer === "water") return "water";
                    if (layer === "road") return "roads";
                    if (layer === "landuse") {
                         var cls = feature.properties["class"];
                         if (cls === "grass") {
                             return "forest";
                         }
                         else if (cls === "wood") {
                             return "forest";
                         }
                    }
                    return null;
                }

                function getName() {
                    if ("name" in feature.properties) {
                        return feature.properties["name"];
                    }
                    return "";
                }

                function getBuildingHeight() {
                    return feature.properties["height"];
                }
              ]]>
            </script>

        </styles>
    </FeatureModel>





    <xi:include href="viewpoints.xml"/>

</map>
