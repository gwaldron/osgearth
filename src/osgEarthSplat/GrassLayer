/* -*-c++-*- */
/* osgEarth - Geospatial SDK for OpenSceneGraph
* Copyright 2008-2012 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
* IN THE SOFTWARE.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_SPLAT_GRASS_LAYER_H
#define OSGEARTH_SPLAT_GRASS_LAYER_H

#include "GroundCoverLayer"
#include <osgEarth/LayerReference>

namespace osgEarth { namespace Splat
{
    using namespace osgEarth;

    //! Layer that renders grass.
    class OSGEARTHSPLAT_EXPORT GrassLayer : public GroundCoverLayer
    {
    public:
        class OSGEARTHSPLAT_EXPORT Options : public GroundCoverLayer::Options {
        public:
            META_LayerOptions(osgEarth, Options, GroundCoverLayer::Options);
            virtual Config getConfig() const;
        private:
            void fromConfig(const Config& conf);
        };

    public:
        META_Layer(osgEarth, GrassLayer, Options, GroundCoverLayer, Grass);

    public: // Layer
        virtual void init();

    protected:
        virtual ~GrassLayer() { }

        virtual void loadShaders(
            VirtualProgram* vp, 
            const osgDB::Options* options) const;

        virtual osg::Geometry* createGeometry(
            unsigned vboTileDim) const;

    private:
        LayerReference<ImageLayer> _colorLayer;
    };

} } // namespace osgEarth::Splat
OSGEARTH_SPECIALIZE_CONFIG(osgEarth::Splat::GrassLayer::Options);

#endif // OSGEARTH_SPLAT_GRASS_LAYER_H
