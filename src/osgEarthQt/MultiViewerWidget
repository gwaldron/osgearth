/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2013 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTHQT_COMPOSITEVIEWERWIDGET_H
#define OSGEARTHQT_COMPOSITEVIEWERWIDGET_H 1

#include <osgEarthQt/Common>

#include <osgEarth/Map>

#include <osgQt/GraphicsWindowQt>
#include <osgViewer/CompositeViewer>

#include <QtCore/QTimer>
#include <QWidget>

namespace osgEarth { namespace QtGui 
{
    using namespace osgEarth;

    /**
     * A widget that uses a CompositeViewer and puts each View in its own panel of a layout 
     */
    class OSGEARTHQT_EXPORT MultiViewerWidget : public QWidget, public osgViewer::CompositeViewer
    {
    public:
      MultiViewerWidget(osg::Node* scene=0L);
      virtual ~MultiViewerWidget() { }

      osgViewer::View* createViewWidget(osg::Node* scene=0L, osgViewer::View* shared=0L);
      virtual void layoutWidgets();

    protected:
      QTimer _timer;

      void initialize();
      osg::Camera* createCamera(int x, int y, int width, int height, osg::GraphicsContext* shared=0L);
      void paintEvent(QPaintEvent *);
    };
} }

#endif // OSGEARTHQT_COMPOSITEVIEWERWIDGET_H
