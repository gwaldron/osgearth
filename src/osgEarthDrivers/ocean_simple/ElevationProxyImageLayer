/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2016 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTH_DRIVER_SIMPLE_OCEAN_ELEV_PROXY_IMAGE_LAYER
#define OSGEARTH_DRIVER_SIMPLE_OCEAN_ELEV_PROXY_IMAGE_LAYER 1

#include <osgEarth/ImageLayer>
#include <osgEarth/ThreadingUtils>

namespace osgEarth {
    class Map;
}

namespace osgEarth { namespace SimpleOcean
{
    using namespace osgEarth;

    /**
     * A customized ImageLayer that taps into another Map, reads elevation
     * tiles, and converts them into heightmap-encoded images.
     */
    class ElevationProxyImageLayer : public osgEarth::ImageLayer
    {
    public:
        /**
         * Constucts a proxy layer
         * @param sourceMap Map from which to read heightfields
         */
        ElevationProxyImageLayer(
            const Map* sourceMap, 
            const ImageLayerOptions& options);

        /** dtor */
        virtual ~ElevationProxyImageLayer() { }

    public: // ImageLayer

        virtual TileSource* createTileSource();

        virtual bool isKeyInLegalRange( const TileKey& key ) const;

        virtual bool isCached( const TileKey& key ) const;

        virtual GeoImage createImageImplementation( const TileKey& key, ProgressCallback* progress);

    private:
        osg::observer_ptr<const Map> _map;
    };

} } // namespace osgEarth::SimpleOcean

#endif // OSGEARTH_DRIVER_SIMPLE_OCEAN_ELEV_PROXY_IMAGE_LAYER
