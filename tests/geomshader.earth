<!--
osgEarth Sample - Geometry Shader

This example shows how to inject a GLSL Geometry Shader into the Terrain
Rendering pipeline.

-->
<map name="readymap.org" type="geocentric">
        
    <image name="readymap_imagery" driver="tms">
        <url>http://readymap.org/readymap/tiles/1.0.0/7/</url>
    </image>
        
    <elevation name="readymap_elevation" driver="tms">
        <url>http://readymap.org/readymap/tiles/1.0.0/116/</url>
    </elevation>
    
    <terrainshader>
        <code><![CDATA[
        
            #version 330
            #pragma vp_entryPoint "pulsateEffect"
            #pragma vp_location   "geometry"

            layout(triangles) in;
            layout(triangle_strip) out;
            layout(max_vertices = 3) out;
            
            // Internal helper functions:
            void VP_LoadVertex(in int);
            void VP_EmitModelVertex();

            uniform float osg_FrameTime;
            
            vec3 vp_Normal;
            
            vec2 rotate(in vec2 p, in float angle)
            {
                return vec2(cos(angle)*p.x + sin(angle)*p.y,
                            cos(angle)*p.y - sin(angle)*p.x);
            }
            
            void pulsateEffect()
            {
                float strength = mod(osg_FrameTime, 6.28);
                                    
                // For each vertex in the input triangle:
                for(int i=0; i < 3; ++i)
                {
                    // Loads per-vertex data "i" into the stage globals:
                    VP_LoadVertex(i);
                    
                    // Transform the vertex:
                    vec4 pos = gl_in[i].gl_Position;
                    pos.xy = rotate(pos.xy, strength);
                    gl_Position = pos;
                    
                    // Copies stage globals to output and calles EmitVertex():
                    VP_EmitModelVertex();
                }
                EndPrimitive();
            }
            
        ]]></code>
    </terrainshader>
</map>
